name: Build-Test-Deploy

on:
  push:
    branches:
      - main  # or your primary branch
    # optionally also run on tags
    tags:
      - 'v*'

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v4

      - name: Make .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_MLFLOW_USERNAME: ${{ secrets.MLFLOW_USERNAME }}
          envkey_MLFLOW_PASSWORD: ${{ secrets.MLFLOW_PASSWORD }}
          envkey_MLFLOW_TRACKING_HOST: ${{ secrets.MLFLOW_TRACKING_HOST }}
          envkey_MODEL_NAME: ${{ secrets.MODEL_NAME }}
          file_name: .env
          fail_on_empty: true
          sort_keys: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install python-dotenv

      - name: Run Django unit tests
        run: |
          python manage.py test prediction

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Your image name
          images: ${{ secrets.DOCKERHUB_USERNAME }}/car_price_app
          tags: type=semver,pattern={{raw}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
    
  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          proxy_host: ${{ vars.PROXY_HOST }}
          proxy_username: ${{ secrets.USERNAME }}
          proxy_key: ${{ secrets.KEY }}
          script: |
            tag=${{ github.ref_name }} docker compose -f st124956/docker-compose.yml down
            tag=${{ github.ref_name }} docker compose -f st124956/docker-compose.yml up -d
